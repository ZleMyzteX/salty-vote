/*
 * This file is generated by jOOQ.
 */
package er.codes.saltyvote.jooq.tables.pojos


import er.codes.saltyvote.jooq.enums.VoteType

import java.io.Serializable
import java.time.OffsetDateTime
import java.util.UUID


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
data class Votes(
    var id: Long? = null,
    var title: String? = null,
    var description: String? = null,
    var creatorId: UUID? = null,
    var voteType: VoteType? = null,
    var allowMulti: Boolean? = null,
    var allowAnonymous: Boolean? = null,
    var done: Boolean? = null,
    var createdAt: OffsetDateTime? = null,
    var updatedAt: OffsetDateTime? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Votes = other as Votes
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.title == null) {
            if (o.title != null)
                return false
        }
        else if (this.title != o.title)
            return false
        if (this.description == null) {
            if (o.description != null)
                return false
        }
        else if (this.description != o.description)
            return false
        if (this.creatorId == null) {
            if (o.creatorId != null)
                return false
        }
        else if (this.creatorId != o.creatorId)
            return false
        if (this.voteType == null) {
            if (o.voteType != null)
                return false
        }
        else if (this.voteType != o.voteType)
            return false
        if (this.allowMulti == null) {
            if (o.allowMulti != null)
                return false
        }
        else if (this.allowMulti != o.allowMulti)
            return false
        if (this.allowAnonymous == null) {
            if (o.allowAnonymous != null)
                return false
        }
        else if (this.allowAnonymous != o.allowAnonymous)
            return false
        if (this.done == null) {
            if (o.done != null)
                return false
        }
        else if (this.done != o.done)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.updatedAt == null) {
            if (o.updatedAt != null)
                return false
        }
        else if (this.updatedAt != o.updatedAt)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.title == null) 0 else this.title.hashCode())
        result = prime * result + (if (this.description == null) 0 else this.description.hashCode())
        result = prime * result + (if (this.creatorId == null) 0 else this.creatorId.hashCode())
        result = prime * result + (if (this.voteType == null) 0 else this.voteType.hashCode())
        result = prime * result + (if (this.allowMulti == null) 0 else this.allowMulti.hashCode())
        result = prime * result + (if (this.allowAnonymous == null) 0 else this.allowAnonymous.hashCode())
        result = prime * result + (if (this.done == null) 0 else this.done.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Votes (")

        sb.append(id)
        sb.append(", ").append(title)
        sb.append(", ").append(description)
        sb.append(", ").append(creatorId)
        sb.append(", ").append(voteType)
        sb.append(", ").append(allowMulti)
        sb.append(", ").append(allowAnonymous)
        sb.append(", ").append(done)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(updatedAt)

        sb.append(")")
        return sb.toString()
    }
}
