/*
 * This file is generated by jOOQ.
 */
package er.codes.saltyvote.jooq.tables.records


import er.codes.saltyvote.jooq.enums.VoteType
import er.codes.saltyvote.jooq.tables.Votes

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class VotesRecord() : UpdatableRecordImpl<VotesRecord>(Votes.VOTES) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var creatorId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var voteType: VoteType?
        set(value): Unit = set(4, value)
        get(): VoteType? = get(4) as VoteType?

    open var allowMulti: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var allowAnonymous: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    open var done: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(8, value)
        get(): OffsetDateTime? = get(8) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised VotesRecord
     */
    constructor(id: Long? = null, title: String? = null, description: String? = null, creatorId: UUID? = null, voteType: VoteType? = null, allowMulti: Boolean? = null, allowAnonymous: Boolean? = null, done: Boolean? = null, createdAt: OffsetDateTime? = null, updatedAt: OffsetDateTime? = null): this() {
        this.id = id
        this.title = title
        this.description = description
        this.creatorId = creatorId
        this.voteType = voteType
        this.allowMulti = allowMulti
        this.allowAnonymous = allowAnonymous
        this.done = done
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised VotesRecord
     */
    constructor(value: er.codes.saltyvote.jooq.tables.pojos.Votes?): this() {
        if (value != null) {
            this.id = value.id
            this.title = value.title
            this.description = value.description
            this.creatorId = value.creatorId
            this.voteType = value.voteType
            this.allowMulti = value.allowMulti
            this.allowAnonymous = value.allowAnonymous
            this.done = value.done
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            resetTouchedOnNotNull()
        }
    }
}
