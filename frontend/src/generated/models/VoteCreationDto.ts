/* tslint:disable */
/* eslint-disable */
/**
 * SaltyVote API
 * API documentation for the saltyvote application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VoteCreationDto
 */
export interface VoteCreationDto {
    /**
     * 
     * @type {string}
     * @memberof VoteCreationDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof VoteCreationDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof VoteCreationDto
     */
    voteType: VoteCreationDtoVoteTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof VoteCreationDto
     */
    allowMultiVote: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteCreationDto
     */
    allowAnonymousVote: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteCreationDto
     */
    done: boolean;
}


/**
 * @export
 */
export const VoteCreationDtoVoteTypeEnum = {
    Ranking: 'RANKING',
    Simple: 'SIMPLE'
} as const;
export type VoteCreationDtoVoteTypeEnum = typeof VoteCreationDtoVoteTypeEnum[keyof typeof VoteCreationDtoVoteTypeEnum];


/**
 * Check if a given object implements the VoteCreationDto interface.
 */
export function instanceOfVoteCreationDto(value: object): value is VoteCreationDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('voteType' in value) || value['voteType'] === undefined) return false;
    if (!('allowMultiVote' in value) || value['allowMultiVote'] === undefined) return false;
    if (!('allowAnonymousVote' in value) || value['allowAnonymousVote'] === undefined) return false;
    if (!('done' in value) || value['done'] === undefined) return false;
    return true;
}

export function VoteCreationDtoFromJSON(json: any): VoteCreationDto {
    return VoteCreationDtoFromJSONTyped(json, false);
}

export function VoteCreationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VoteCreationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'voteType': json['voteType'],
        'allowMultiVote': json['allowMultiVote'],
        'allowAnonymousVote': json['allowAnonymousVote'],
        'done': json['done'],
    };
}

export function VoteCreationDtoToJSON(json: any): VoteCreationDto {
    return VoteCreationDtoToJSONTyped(json, false);
}

export function VoteCreationDtoToJSONTyped(value?: VoteCreationDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'voteType': value['voteType'],
        'allowMultiVote': value['allowMultiVote'],
        'allowAnonymousVote': value['allowAnonymousVote'],
        'done': value['done'],
    };
}

