/*
 * This file is generated by jOOQ.
 */
package er.codes.saltyvote.jooq.tables.records


import er.codes.saltyvote.jooq.tables.Users

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var uuid: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var email: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var username: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var password: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var admin: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    open var enabled: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(uuid: UUID? = null, email: String? = null, username: String? = null, password: String? = null, admin: Boolean? = null, enabled: Boolean? = null, createdAt: OffsetDateTime? = null, updatedAt: OffsetDateTime? = null): this() {
        this.uuid = uuid
        this.email = email
        this.username = username
        this.password = password
        this.admin = admin
        this.enabled = enabled
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(value: er.codes.saltyvote.jooq.tables.pojos.Users?): this() {
        if (value != null) {
            this.uuid = value.uuid
            this.email = value.email
            this.username = value.username
            this.password = value.password
            this.admin = value.admin
            this.enabled = value.enabled
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            resetTouchedOnNotNull()
        }
    }
}
