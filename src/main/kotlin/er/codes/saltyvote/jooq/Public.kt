/*
 * This file is generated by jOOQ.
 */
package er.codes.saltyvote.jooq


import er.codes.saltyvote.jooq.tables.History
import er.codes.saltyvote.jooq.tables.Users
import er.codes.saltyvote.jooq.tables.VoteOptions
import er.codes.saltyvote.jooq.tables.VoteSubmissionEntries
import er.codes.saltyvote.jooq.tables.VoteSubmissions
import er.codes.saltyvote.jooq.tables.Votes

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.DSL
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class Public : SchemaImpl(DSL.name("public"), DefaultCatalog.DEFAULT_CATALOG, DSL.comment("")) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.history</code>.
     */
    val HISTORY: History get() = History.HISTORY

    /**
     * The table <code>public.users</code>.
     */
    val USERS: Users get() = Users.USERS

    /**
     * The table <code>public.vote_options</code>.
     */
    val VOTE_OPTIONS: VoteOptions get() = VoteOptions.VOTE_OPTIONS

    /**
     * The table <code>public.vote_submission_entries</code>.
     */
    val VOTE_SUBMISSION_ENTRIES: VoteSubmissionEntries get() = VoteSubmissionEntries.VOTE_SUBMISSION_ENTRIES

    /**
     * The table <code>public.vote_submissions</code>.
     */
    val VOTE_SUBMISSIONS: VoteSubmissions get() = VoteSubmissions.VOTE_SUBMISSIONS

    /**
     * The table <code>public.votes</code>.
     */
    val VOTES: Votes get() = Votes.VOTES

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        History.HISTORY,
        Users.USERS,
        VoteOptions.VOTE_OPTIONS,
        VoteSubmissionEntries.VOTE_SUBMISSION_ENTRIES,
        VoteSubmissions.VOTE_SUBMISSIONS,
        Votes.VOTES
    )
}
