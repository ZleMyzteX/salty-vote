/* tslint:disable */
/* eslint-disable */
/**
 * SaltyVote API
 * API documentation for the saltyvote application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AirbnbVoteOptionEnrichedDto } from './AirbnbVoteOptionEnrichedDto';
import {
    AirbnbVoteOptionEnrichedDtoFromJSON,
    AirbnbVoteOptionEnrichedDtoFromJSONTyped,
    AirbnbVoteOptionEnrichedDtoToJSON,
    AirbnbVoteOptionEnrichedDtoToJSONTyped,
} from './AirbnbVoteOptionEnrichedDto';

/**
 * 
 * @export
 * @interface VoteWithEnrichedAirbnbOptionsDto
 */
export interface VoteWithEnrichedAirbnbOptionsDto {
    /**
     * 
     * @type {number}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    voteType: VoteWithEnrichedAirbnbOptionsDtoVoteTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    allowMultiVote: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    allowAnonymousVote: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    done: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    isCreator: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    isCollaborator: boolean;
    /**
     * 
     * @type {Array<AirbnbVoteOptionEnrichedDto>}
     * @memberof VoteWithEnrichedAirbnbOptionsDto
     */
    options: Array<AirbnbVoteOptionEnrichedDto>;
}


/**
 * @export
 */
export const VoteWithEnrichedAirbnbOptionsDtoVoteTypeEnum = {
    Ranking: 'RANKING',
    Simple: 'SIMPLE'
} as const;
export type VoteWithEnrichedAirbnbOptionsDtoVoteTypeEnum = typeof VoteWithEnrichedAirbnbOptionsDtoVoteTypeEnum[keyof typeof VoteWithEnrichedAirbnbOptionsDtoVoteTypeEnum];


/**
 * Check if a given object implements the VoteWithEnrichedAirbnbOptionsDto interface.
 */
export function instanceOfVoteWithEnrichedAirbnbOptionsDto(value: object): value is VoteWithEnrichedAirbnbOptionsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('voteType' in value) || value['voteType'] === undefined) return false;
    if (!('allowMultiVote' in value) || value['allowMultiVote'] === undefined) return false;
    if (!('allowAnonymousVote' in value) || value['allowAnonymousVote'] === undefined) return false;
    if (!('done' in value) || value['done'] === undefined) return false;
    if (!('isCreator' in value) || value['isCreator'] === undefined) return false;
    if (!('isCollaborator' in value) || value['isCollaborator'] === undefined) return false;
    if (!('options' in value) || value['options'] === undefined) return false;
    return true;
}

export function VoteWithEnrichedAirbnbOptionsDtoFromJSON(json: any): VoteWithEnrichedAirbnbOptionsDto {
    return VoteWithEnrichedAirbnbOptionsDtoFromJSONTyped(json, false);
}

export function VoteWithEnrichedAirbnbOptionsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VoteWithEnrichedAirbnbOptionsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'voteType': json['voteType'],
        'allowMultiVote': json['allowMultiVote'],
        'allowAnonymousVote': json['allowAnonymousVote'],
        'done': json['done'],
        'isCreator': json['isCreator'],
        'isCollaborator': json['isCollaborator'],
        'options': ((json['options'] as Array<any>).map(AirbnbVoteOptionEnrichedDtoFromJSON)),
    };
}

export function VoteWithEnrichedAirbnbOptionsDtoToJSON(json: any): VoteWithEnrichedAirbnbOptionsDto {
    return VoteWithEnrichedAirbnbOptionsDtoToJSONTyped(json, false);
}

export function VoteWithEnrichedAirbnbOptionsDtoToJSONTyped(value?: VoteWithEnrichedAirbnbOptionsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'voteType': value['voteType'],
        'allowMultiVote': value['allowMultiVote'],
        'allowAnonymousVote': value['allowAnonymousVote'],
        'done': value['done'],
        'isCreator': value['isCreator'],
        'isCollaborator': value['isCollaborator'],
        'options': ((value['options'] as Array<any>).map(AirbnbVoteOptionEnrichedDtoToJSON)),
    };
}

