/*
 * This file is generated by jOOQ.
 */
package er.codes.saltyvote.jooq.tables.daos


import er.codes.saltyvote.jooq.AbstractSpringDAOImpl
import er.codes.saltyvote.jooq.tables.VoteOptionExternalData
import er.codes.saltyvote.jooq.tables.records.VoteOptionExternalDataRecord

import java.math.BigDecimal
import java.time.OffsetDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.JSONB
import org.springframework.stereotype.Repository


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
@Repository
open class VoteOptionExternalDataDao(configuration: Configuration?) : AbstractSpringDAOImpl<VoteOptionExternalDataRecord, er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData, Long>(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA, er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData::class.java, configuration) {

    /**
     * Create a new VoteOptionExternalDataDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData): Long? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData? = fetchOne(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.ID, value)

    /**
     * Fetch records that have <code>vote_option_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfVoteOptionId(lowerInclusive: Long?, upperInclusive: Long?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.VOTE_OPTION_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>vote_option_id IN (values)</code>
     */
    fun fetchByVoteOptionId(vararg values: Long): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.VOTE_OPTION_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>source_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfSourceUrl(lowerInclusive: String?, upperInclusive: String?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.SOURCE_URL, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>source_url IN (values)</code>
     */
    fun fetchBySourceUrl(vararg values: String): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.SOURCE_URL, *values)

    /**
     * Fetch records that have <code>airbnb_title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfAirbnbTitle(lowerInclusive: String?, upperInclusive: String?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_TITLE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>airbnb_title IN (values)</code>
     */
    fun fetchByAirbnbTitle(vararg values: String): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_TITLE, *values)

    /**
     * Fetch records that have <code>airbnb_review_count BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfAirbnbReviewCount(lowerInclusive: BigDecimal?, upperInclusive: BigDecimal?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_REVIEW_COUNT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>airbnb_review_count IN (values)</code>
     */
    fun fetchByAirbnbReviewCount(vararg values: BigDecimal): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_REVIEW_COUNT, *values)

    /**
     * Fetch records that have <code>airbnb_star_rating BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfAirbnbStarRating(lowerInclusive: BigDecimal?, upperInclusive: BigDecimal?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_STAR_RATING, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>airbnb_star_rating IN (values)</code>
     */
    fun fetchByAirbnbStarRating(vararg values: BigDecimal): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_STAR_RATING, *values)

    /**
     * Fetch records that have <code>airbnb_picture_url BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfAirbnbPictureUrl(lowerInclusive: String?, upperInclusive: String?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_PICTURE_URL, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>airbnb_picture_url IN (values)</code>
     */
    fun fetchByAirbnbPictureUrl(vararg values: String): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_PICTURE_URL, *values)

    /**
     * Fetch records that have <code>airbnb_picture_local_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfAirbnbPictureLocalId(lowerInclusive: Long?, upperInclusive: Long?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_PICTURE_LOCAL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>airbnb_picture_local_id IN (values)</code>
     */
    fun fetchByAirbnbPictureLocalId(vararg values: Long): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.AIRBNB_PICTURE_LOCAL_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>raw_payload BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRawPayload(lowerInclusive: JSONB?, upperInclusive: JSONB?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.RAW_PAYLOAD, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>raw_payload IN (values)</code>
     */
    fun fetchByRawPayload(vararg values: JSONB): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.RAW_PAYLOAD, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetchRange(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<er.codes.saltyvote.jooq.tables.pojos.VoteOptionExternalData> = fetch(VoteOptionExternalData.VOTE_OPTION_EXTERNAL_DATA.CREATED_AT, *values)
}
