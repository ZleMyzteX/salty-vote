/* tslint:disable */
/* eslint-disable */
/**
 * SaltyVote API
 * API documentation for the saltyvote application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VoterRankingDto } from './VoterRankingDto';
import {
    VoterRankingDtoFromJSON,
    VoterRankingDtoFromJSONTyped,
    VoterRankingDtoToJSON,
    VoterRankingDtoToJSONTyped,
} from './VoterRankingDto';

/**
 * 
 * @export
 * @interface IndividualVoterDto
 */
export interface IndividualVoterDto {
    /**
     * 
     * @type {string}
     * @memberof IndividualVoterDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof IndividualVoterDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof IndividualVoterDto
     */
    username: string;
    /**
     * 
     * @type {Date}
     * @memberof IndividualVoterDto
     */
    submittedAt: Date;
    /**
     * 
     * @type {Array<VoterRankingDto>}
     * @memberof IndividualVoterDto
     */
    rankings: Array<VoterRankingDto>;
}

/**
 * Check if a given object implements the IndividualVoterDto interface.
 */
export function instanceOfIndividualVoterDto(value: object): value is IndividualVoterDto {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('submittedAt' in value) || value['submittedAt'] === undefined) return false;
    if (!('rankings' in value) || value['rankings'] === undefined) return false;
    return true;
}

export function IndividualVoterDtoFromJSON(json: any): IndividualVoterDto {
    return IndividualVoterDtoFromJSONTyped(json, false);
}

export function IndividualVoterDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndividualVoterDto {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'email': json['email'],
        'username': json['username'],
        'submittedAt': (new Date(json['submittedAt'])),
        'rankings': ((json['rankings'] as Array<any>).map(VoterRankingDtoFromJSON)),
    };
}

export function IndividualVoterDtoToJSON(json: any): IndividualVoterDto {
    return IndividualVoterDtoToJSONTyped(json, false);
}

export function IndividualVoterDtoToJSONTyped(value?: IndividualVoterDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'email': value['email'],
        'username': value['username'],
        'submittedAt': value['submittedAt'].toISOString(),
        'rankings': ((value['rankings'] as Array<any>).map(VoterRankingDtoToJSON)),
    };
}

